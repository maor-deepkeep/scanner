name: Sync specific path to Azure DevOps

on:
  push:
    branches:
      - "**"
    # Only trigger when the source path changes (adjust as needed)
    paths:
      - "microservices/scanner/**"     # <-- match your SRC_PATH
  workflow_dispatch: {}

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      SRC_PATH: "scanner"        # <-- path in GitHub repo
      DEST_PATH: "microservices/scanner"                # <-- path in Azure repo
      TARGET_BRANCH: "model-scanner-integration" # <-- non-master branch
    steps:
      - name: Checkout GitHub repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git identity
        run: |
          git config --global user.name  "${{ secrets.GIT_USER_NAME || 'github-actions[bot]' }}"
          git config --global user.email "${{ secrets.GIT_USER_EMAIL || 'github-actions[bot]@users.noreply.github.com' }}"

      - name: Build authenticated Azure URL
        id: authurl
        shell: bash
        run: |
          # Use a username + PAT in the https URL (username can be anything non-empty)
          BASE_URL="${{ secrets.AZURE_DEVOPS_URL }}"
          PAT="${{ secrets.AZURE_DEVOPS_PAT }}"
          # URL-encode PAT characters that might break the URL
          enc() { python3 - <<'PY'
          import os, urllib.parse
          print(urllib.parse.quote(os.environ["PAT"], safe=""))
          PY
          }
          export PAT="$(enc)"
          echo "AUTH_URL=$(echo "$BASE_URL" | sed -E "s#https://#https://azdo:${PAT}@#")" >> $GITHUB_OUTPUT

      - name: Clone Azure repo
        run: |
          git clone "${{ steps.authurl.outputs.AUTH_URL }}" azure-repo
          cd azure-repo
          # Check if target branch exists; if not, create it
          if ! git ls-remote --exit-code --heads origin "${TARGET_BRANCH}" >/dev/null 2>&1; then
            # Create orphan branch so history is clean for this branch
            git checkout --orphan "${TARGET_BRANCH}"
            rm -rf ./*
            git commit --allow-empty -m "Initialize ${TARGET_BRANCH}"
            git push origin "${TARGET_BRANCH}"
          fi
          git checkout "${TARGET_BRANCH}"

      - name: Sync selected path only
        run: |
          # Ensure destination folder exists
          mkdir -p "azure-repo/${DEST_PATH}"
          # rsync the *contents* of SRC_PATH -> DEST_PATH, reflecting deletions
          rsync -a --delete --exclude='.git' "${SRC_PATH}/" "azure-repo/${DEST_PATH}/"

      - name: Commit & push (if changes)
        working-directory: azure-repo
        run: |
          # Limit the commit to DEST_PATH so nothing else in the repo is touched
          git add "${DEST_PATH}"
          if ! git diff --cached --quiet; then
            git commit -m "Sync ${DEST_PATH} from GitHub ${GITHUB_REPOSITORY}@${GITHUB_SHA}"
            git push origin "${TARGET_BRANCH}"
          else
            echo "No changes to commit."
          fi
